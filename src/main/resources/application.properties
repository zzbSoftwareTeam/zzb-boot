#基础环境配置
spring.profiles.active=dev
########################################################
###datasource
########################################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/zzb?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456

# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

########################################################
### mybatis 
########################################################

mybatis.config-location=classpath:mybatis/mybatis-config.xml
#MyBatis xml config file (optional)
mybatis.mapper-locations=classpath:mybatis/mapper/mysql/**/*Mapper.xml
#Mapper xml config files (optional)
#mybatis.type-aliases-package=
#Package to search for type aliases (optional)
#mybatis.type-handlers-package=
#Package to search for type aliases (optional)
#mybatis.executor-type=
#Executor type: SIMPLE, REUSE, BATCH (optional)
#mybatis.configuration=
#A MyBatis Configuration bean. About available properties see the MyBatis reference page. NOTE This property cannot use at the same time with the config-location.    
#分页
#pagehelper.offsetAsPageNum
#pagehelper.rowBoundsWithCount
#pagehelper.pageSizeZero
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
#pagehelper.dialect
pagehelper.helperDialect=mysql
#pagehelper.autoRuntimeDialect
#pagehelper.autoDialect
#pagehelper.closeConn
pagehelper.params=count=countSql

########################################################
### Java Persistence Api
########################################################
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQL5Dialect


########################################################
###EMBEDDED SERVER CONFIGURATION (ServerProperties)
########################################################
#启用shutdown
endpoints.shutdown.enabled=true
#禁用密码验证
endpoints.shutdown.sensitive=false
# 服务端口
server.port=8088
#server.address= # bind to a specific NIC
#server.session-timeout= # session timeout in seconds
#the context path, defaults to '/'
server.context-path=/
# 错误页，指定发生错误时，跳转的URL。请查看BasicErrorController源码便知
server.error.path=/error/404
# session最大超时时间(分钟)，默认为30
server.session-timeout=60

# tomcat最大线程数，默认为200
server.tomcat.max-threads=800
# tomcat的URI编码
server.tomcat.uri-encoding=UTF-8
# 存放Tomcat的日志、Dump等文件的临时文件夹，默认为系统的tmp文件夹（如：C:\Users\Shanhy\AppData\Local\Temp）
#server.tomcat.basedir=C:\MyWork\tomcatlog
# 打开Tomcat的Access日志，并可以设置日志格式的方法：
#server.tomcat.access-log-enabled=true
#server.tomcat.access-log-pattern=
# accesslog目录，默认在basedir/logs
#server.tomcat.accesslog.directory=
#server.tomcat.protocol-header=x-forwarded-proto # ssl forward headers
#server.tomcat.remote-ip-header=x-forwarded-for
#server.tomcat.background-processor-delay=30; # in seconds

########################################################
###spring cloud eureka
########################################################
#Eureka实例名，集群中根据这里相互识别
spring.application.name=eureka-server
eureka.instance.hostname=eureka1
#客户端
#是否开启注册服务，因为这里如果为true表示自己注册自己，而自己就是一个服务注册方，没必要自己注册自己
eureka.client.registerWithEureka=false
#是否拉取服务列表，这里我只提供服务给别的服务。
eureka.client.fetchRegistry=false

#注册中心地址
eureka.serviceUrl.defaultZone=http://eureka1:8888/eureka/

########################################################
###THYMELEAF (ThymeleafAutoConfiguration)
########################################################
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
#dev tools
#spring.devtools.livereload.enabled=true
# 静态文件请求匹配方式
spring.mvc.static-path-pattern=/**
# 修改默认的静态寻址资源目录 ,classpath:/META-INF/resources/,classpath:/public/
spring.resources.static-locations = classpath:/static/,classpath:/META-INF/resources/,classpath:/META-INF/resources/webjars/

########################################################
###LOG4J TRACE < DEBUG < INFO < WARN < ERROR < FATAL
########################################################
logging.level.root=INFO
#输出warn及以上级别的信息
#logging.level.org.springframework.web=DEBUG
logging.level.com.zzb.module.system.dao=DEBUG
logging.file=logs/zzb-boot-logging.log

########################################################
###SECURITY (SecurityProperties 类)
########################################################
security.basic.authorize-mode=role
# 应用授权模式，ROLE=成员必须是安全的角色，AUTHENTICATED=经过身份验证的用户，NONE=没有设置安全授权
security.basic.enabled=true
# 启用基本身份认证
security.basic.path=/**
# 拦截策略，以逗号分隔
security.basic.realm=Spring
# HTTP基本realm
security.enable-csrf=true
# 启用csrf支持
security.filter-order=0
# 过滤器执行顺序
security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST
# security 过滤器链dispatcher类型
security.headers.cache=true
# 启用缓存控制 HTTP headers.
security.headers.content-type=true
# 启用 "X-Content-Type-Options" header.
security.headers.frame=true
# 启用 "X-Frame-Options" header. frame劫持问题
security.headers.hsts=
# HTTP Strict Transport Security (HSTS) mode (none, domain, all).
security.headers.xss=true
# 启用跨域脚本 (XSS) 保护.
security.ignored=
# 安全策略，以逗号分隔
security.require-ssl=false
# 启用所有请求SSL
security.sessions=stateless
# Session 创建策略(always, never, if_required, stateless).
#security.user.name=zzb
# 默认用户名
#security.user.password=123
# 默认用户名密码
#security.user.role=USER
# 默认用户角色

#######################################################
### REDIS (RedisProperties)
########################################################
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=zzb123
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=5
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=5000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=5
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=2
# 连接超时时间（毫秒）
spring.redis.timeout=3000

########################################################
## ACTIVEMQ
########################################################
#自定义属性
#spring.activemq.jmx-url=service:jmx:rmi:///jndi/rmi://127.0.0.1:11099/jmxrmi
spring.activemq.jmx-url=service:jmx:rmi:///jndi/rmi://192.168.1.115:11099/jmxrmi
#自定义属性 brokerName的b要小些，大写会报错
spring.activemq.brokerName=domains:brokerName=broker,type=Broker

#spring.activemq.broker-url=tcp://120.78.165.88:61616
spring.activemq.broker-url=tcp://127.0.0.1:61616
# URL of the ActiveMQ broker. Auto-generated by default. For instance `tcp://localhost:61616`
spring.activemq.in-memory=true
# Specify if the default broker URL should be in memory. Ignored if an explicit broker has been specified.
spring.activemq.password=zzb123
# Login password of the broker.
spring.activemq.user=mqAdmin
# Login user of the broker.
spring.jms.pub-sub-domain=false
# topic true , queue false
spring.activemq.packages.trust-all=false
# Trust all packages.
spring.activemq.packages.trusted=
# Comma-separated list of specific packages to trust (when not trusting all packages).
spring.activemq.pool.configuration.*=
# See PooledConnectionFactory.
spring.activemq.pool.enabled=true
# Whether a PooledConnectionFactory should be created instead of a regular ConnectionFactory.
spring.activemq.pool.expiry-timeout=3000
# Connection expiration timeout in milliseconds.
spring.activemq.pool.idle-timeout=30000
# Connection idle timeout in milliseconds.
spring.activemq.pool.max-connections=10
# Maximum number of pooled connections.


########################################################
## elasticsearch
########################################################
#org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchProperties
spring.data.elasticsearch.cluster-name=elasticsearch
#Elasticsearch 集群名。(默认值: elasticsearch)
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
#集群节点地址列表，用逗号分隔。如果没有指定，就启动一个客户端节点。
spring.data.elasticsearch.repositories.enabled=true
#开启 Elasticsearch 仓库。(默认值:true。)

#spring.data.elasticsearch.properties.path.logs=./elasticsearch/log
#elasticsearch日志存储目录
#spring.data.elasticsearch.properties.path.data=./elasticsearch/data
#elasticsearch数据存储目录            
#spring.data.elasticsearch.propertie=
#用来配置客户端的额外属性。